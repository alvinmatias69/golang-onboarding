// Code generated by MockGen. DO NOT EDIT.
// Source: dependencies.go

// Package todo is a generated GoMock package.
package todo

import (
	context "context"
	reflect "reflect"

	todo "github.com/alvinmatias69/golang-onboarding/internal/model/todo"
	gomock "github.com/golang/mock/gomock"
)

// MocktodoRepository is a mock of todoRepository interface.
type MocktodoRepository struct {
	ctrl     *gomock.Controller
	recorder *MocktodoRepositoryMockRecorder
}

// MocktodoRepositoryMockRecorder is the mock recorder for MocktodoRepository.
type MocktodoRepositoryMockRecorder struct {
	mock *MocktodoRepository
}

// NewMocktodoRepository creates a new mock instance.
func NewMocktodoRepository(ctrl *gomock.Controller) *MocktodoRepository {
	mock := &MocktodoRepository{ctrl: ctrl}
	mock.recorder = &MocktodoRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktodoRepository) EXPECT() *MocktodoRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MocktodoRepository) Add(ctx context.Context, item todo.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MocktodoRepositoryMockRecorder) Add(ctx, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MocktodoRepository)(nil).Add), ctx, item)
}

// Get mocks base method.
func (m *MocktodoRepository) Get(ctx context.Context) ([]todo.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx)
	ret0, _ := ret[0].([]todo.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MocktodoRepositoryMockRecorder) Get(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MocktodoRepository)(nil).Get), ctx)
}

// Update mocks base method.
func (m *MocktodoRepository) Update(ctx context.Context, id uint64, item todo.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, id, item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MocktodoRepositoryMockRecorder) Update(ctx, id, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MocktodoRepository)(nil).Update), ctx, id, item)
}
